---

- name: set VPC hostname list fact
  set_fact:
    _aws_vpcs: '{{ groups["aws-vpcs"] | sort }}'

- name: set VPC name list fact
  set_fact:
    _aws_vpc_names: >
      {{ (_aws_vpc_names | default([]))
         + [hostvars[item]["aws_vpc_name"]] }}
  with_items: '{{ _aws_vpcs }}'

- name: set flag for whether this host is a VPC
  set_fact:
    is_vpc: >-
      {{ ((inventory_hostname
           | truncate(length=8, killwords=True, end="", leeway=0))
          == 'aws-vpc-')
         | bool }}

- include_tasks: id.yml
  when: inventory_hostname == aws_directconnect_account_hostname

- include_tasks: gateway.yml
  when:
    aws_directconnect_gateway_asn                  is defined and
    aws_directconnect_gateway_allowed_prefixes     is defined and
    aws_directconnect_gateway_name                 is defined

- include_tasks: transit-vif.yml
  when:
    aws_directconnect_transit_vif_amazon_address   is defined and
    aws_directconnect_transit_vif_customer_address is defined and
    aws_directconnect_transit_vif_vlan             is defined

- block:

    - include_role:
        name: aws-vpc
        tasks_from: vpc_id

    - include_role:
        name: aws-vpc
        tasks_from: vgw_ids

    - name: get AWS account number
      command: >
        aws sts get-caller-identity
                --output text
                --profile '{{ aws_profile }}'
                --query 'Account'
      register: _aws_vpc_account
      changed_when: False

    - name: set VPC virtual gateway ID fact
      set_fact:
        _aws_vpc_vgw_id: >-
          {{
            _aws_vpc_vgw_ids[0]
            if _aws_vpc_vgw_ids != []
            else ''
          }}

  when: is_vpc

- include_tasks: vifs.yml

- block:

    - name: allocate private virtual interfaces
      command: >
        aws directconnect allocate-private-virtual-interface
                          --connection-id '{{ _aws_directconnect_id }}'
                          --owner-account
                            '{{ hostvars["aws-vpc-" + item]
                                        ["_aws_vpc_account"].stdout }}'
                          --new-private-virtual-interface-allocation
                            '{{ lookup("template",
                                       playbook_dir
                                       + "/roles/aws-directconnect/templates/"
                                       + "private-vif-allocation.json.j2")
                                | to_nice_json }}'
                          --profile '{{ aws_profile }}'
      register: _aws_directconnect_private_vifs_allocate
      with_items: >
        {{ _aws_vpc_names | difference(_aws_directconnect_existing_vifs) }}

  when: inventory_hostname == aws_directconnect_account_hostname

- include_tasks: vifs.yml

- block:

    - name: confirm private virtual interfaces
      command: >
        aws directconnect confirm-private-virtual-interface
                          --virtual-interface-id
                            '{{ _aws_directconnect_existing_vifs
                                  [aws_vpc_name]["virtualInterfaceId"] }}'
                          --virtual-gateway-id '{{ _aws_vpc_vgw_id }}'
                          --profile '{{ aws_profile }}'
      register: _aws_directconnect_private_vifs_confirm
      when: >
        _aws_directconnect_existing_vifs[aws_vpc_name]["virtualInterfaceState"]
        == "confirming"

  when: is_vpc and _aws_vpc_vgw_id != ''
